# app/handlers/start.py
from aiogram import Router, types, F
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.storage import Session, User, KV, init_db

router = Router()

def _set_mode(tg_id: int, mode: str):
    with Session() as s:
        key = f"mode:{tg_id}"
        row = s.get(KV, key)
        if not row:
            s.add(KV(key=key, value=mode))
        else:
            row.value = mode
        s.commit()

@router.message(CommandStart())
async def cmd_start(m: types.Message):
    init_db()
    with Session() as s:
        u = s.query(User).filter_by(tg_id=m.from_user.id).one_or_none()
        if not u:
            u = User(tg_id=m.from_user.id, username=m.from_user.username or "")
            s.add(u)
            s.commit()

    kb = InlineKeyboardBuilder()
    kb.button(text="‚ö° VPN –¥–ª—è Wi-Fi (Outline)", callback_data="mode_outline")
    kb.button(text="üì± VPN Wi-Fi + –º–æ–±–∏–ª—å–Ω—ã–π (Reality)", callback_data="mode_mobile")
    kb.adjust(1)
    await m.answer(
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:\n\n"
        "‚ö° *Wi-Fi (Outline)* ‚Äî –ø—Ä–æ—Å—Ç–æ–π –∏ –±—ã—Å—Ç—Ä—ã–π, –ª—É—á—à–µ –¥–ª—è Wi-Fi.\n"
        "üì± *Wi-Fi + –º–æ–±–∏–ª—å–Ω—ã–π (Reality)* ‚Äî —É—Å—Ç–æ–π—á–∏–≤ –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å–≤—è–∑–∏.\n",
        parse_mode="Markdown",
        reply_markup=kb.as_markup()
    )

@router.callback_query(F.data == "mode_outline")
async def on_mode_outline(cb: types.CallbackQuery):
    _set_mode(cb.from_user.id, "outline")
    kb = InlineKeyboardBuilder()
    kb.button(text="üí≥ –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø (Outline)", callback_data="purchase")
    kb.button(text="üì• –ö–ª–∏–µ–Ω—Ç—ã (Outline)", callback_data="install_outline")  # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
    kb.adjust(1)
    await cb.message.edit_text(
        "–†–µ–∂–∏–º: ‚ö° *Wi-Fi (Outline)*.\n\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:",
        parse_mode="Markdown",
        reply_markup=kb.as_markup()
    )
    await cb.answer()

@router.callback_query(F.data == "mode_mobile")
async def on_mode_mobile(cb: types.CallbackQuery):
    _set_mode(cb.from_user.id, "mobile")
    kb = InlineKeyboardBuilder()
    kb.button(text="üí≥ –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø (Reality)", callback_data="purchase")
    kb.button(text="üì• –ö–ª–∏–µ–Ω—Ç—ã (Reality)", callback_data="install_mobile")   # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û
    kb.adjust(1)
    await cb.message.edit_text(
        "–†–µ–∂–∏–º: üì± *Wi-Fi + –º–æ–±–∏–ª—å–Ω—ã–π (Reality)*.\n\n"
        "–ù—É–∂–µ–Ω –∫–ª–∏–µ–Ω—Ç: *v2rayNG (Android), FoXray/Sing-box (iOS), v2rayN (Windows), Stash (macOS)*.\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:",
        parse_mode="Markdown",
        reply_markup=kb.as_markup()
    )
    await cb.answer()